import{d as _,a as b,t as x}from"./BPyiyC_m.js";import"./B2YF9tyq.js";import{aq as T,m as I,ar as L,e as $,r as z,t as M}from"./CpwNkmoQ.js";import{s as W}from"./BAHnar9m.js";import{i as F}from"./BmgNgRVt.js";import{s as N}from"./jM2rXxed.js";import{s as S}from"./u8Iap7DL.js";import{i as O}from"./D3sFF71D.js";import{p as q}from"./BkUCjqIG.js";import{s as K,a as H}from"./VC3jnv3y.js";import{a as l,s as V}from"./1DkUAA9P.js";import{f as P}from"./DkChiY3b.js";import{g as B,r as D,f as Z,d as G,b as J,c as Q,e as X,p as Y,h as tt,t as U,u as at,i as j}from"./CWPP9cGa.js";const E="private/settings/avatar",et=a=>{const r=a.split(".").pop()||"png";return`${E}.${r}`},C=5,R=async()=>{console.log("Attempting to get avatar from manifest..."),l.update(a=>({...a,loading:!0}));try{const a=await B(),r=await D();if(!a||!r){console.log("Cannot get avatar: Not logged in or manifest missing."),l.update(e=>({...e,avatar:null,loading:!1}));return}let t=null,p=null;const o=["png","jpg","jpeg","gif","webp"];for(const e of o){const s=`${E}.${e}`;if(a.files[s]){t=a.files[s],p=s;break}}if(!t||!p){console.log("Avatar not found in manifest."),l.update(e=>({...e,avatar:null,loading:!1}));return}console.log("Avatar entry found in manifest:",t);const m=await Z(t.cid);if(!m)throw new Error("Failed to fetch encrypted avatar data from IPFS.");const d=P(t.iv,"base64pad"),f=P(t.key,"base64pad"),g=await G(f,r.privateKey),n=await J(m,g,d),y=new Blob([n],{type:t.type}),v=URL.createObjectURL(y),w={cid:t.cid,ctime:t.ctime,mtime:t.mtime,name:t.name,size:t.size,src:v};l.update(e=>({...e,avatar:w,loading:!1})),console.log("Avatar loaded and decrypted successfully.")}catch(a){console.error("Error getting avatar:",a),l.update(r=>({...r,avatar:null,loading:!1}))}},bt=async a=>{console.log(`Attempting to upload avatar: ${a.name}`),l.update(r=>({...r,loading:!0}));try{if(a.size/1048576>C)throw new Error(`Image can be no larger than ${C}MB`);const t=await B(),p=await D();if(!t||!p)throw new Error("User not logged in or manifest missing.");const o=et(a.name);console.log("Using avatar path:",o);const m=new Uint8Array(await a.arrayBuffer()),d=await Q(),{ciphertext:f,iv:g}=await X(m,d),n=await Y(new Uint8Array(f),{name:`encrypted-avatar-${a.name}`});if(!n)throw new Error("Failed to pin encrypted avatar data to IPFS.");console.log(`Encrypted avatar pinned. CID: ${n}`);const y=await tt(d,p.publicKey),v=Date.now(),w={cid:n,iv:U(g,"base64pad"),key:U(new Uint8Array(y),"base64pad"),name:a.name,type:a.type,size:a.size,ctime:v,mtime:v},e={...t.files};Object.keys(e).forEach(i=>{i.startsWith(E)&&(console.log("Removing old avatar entry:",i),delete e[i])}),e[o]=w;const s={...t,files:e};if(!await at(s))throw new Error("Failed to update manifest on IPFS after avatar upload.");j("Avatar updated successfully!","success"),await R()}catch(r){j(r.message,"error"),console.error("Error uploading avatar:",r),l.update(t=>({...t,loading:!1}))}};var rt=x("<div><span></span></div>"),st=x('<img alt="User Avatar">'),ot=x("<div> </div>");function ht(a,r){T(r,!1);const[t,p]=H(),o=()=>K(l,"$accountSettingsStore",t),m=()=>K(V,"$sessionStore",t);let d=q(r,"size",8,"large");const f=d()==="large"?"w-[88px] h-[88px] text-[40px]":"w-[40px] h-[40px] text-sm",g=d()==="large"?"w-[28px] h-[28px]":"w-[16px] h-[16px]";R(),O();var n=_(),y=I(n);{var v=e=>{var s=_(),h=I(s);{var i=u=>{var c=rt();S(c,1,`flex items-center justify-center object-cover rounded-full border-2 border-base-content ${f}`);var k=$(c);S(k,1,`animate-spin ease-linear rounded-full border-2 border-t-2 border-t-orange-300 border-base-content ${g}`),z(c),b(u,c)},A=u=>{var c=st();S(c,1,`object-cover rounded-full border-2 border-base-content ${f}`),M(()=>N(c,"src",o().avatar.src)),b(u,c)};F(h,u=>{o().loading?u(i):u(A,!1)})}b(e,s)},w=e=>{var s=ot();S(s,1,`flex items-center justify-center bg-base-content text-base-100 uppercase font-bold rounded-full ${f}`);var h=$(s,!0);z(s),M(()=>{var i,A;return W(h,(A=(i=m())==null?void 0:i.username)==null?void 0:A[0])}),b(e,s)};F(y,e=>{o().avatar?e(v):e(w,!1)})}b(a,n),L(),p()}export{ht as A,R as g,bt as u};
